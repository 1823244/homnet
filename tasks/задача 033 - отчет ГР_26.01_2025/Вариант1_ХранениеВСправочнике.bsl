// ВАРИАНТ 1: Хранение списков контрагентов в справочнике Показателей
// Списки хранятся в атрибуте ТекстКода в формате "ИНН;КПП;Наименование" (каждая строка - один контрагент)
// При использовании списков контрагенты ищутся по ИНН+КПП

#Область ВариантХранения_ВСправочникеПоказателей

// Назначение: Создание элемента-хранилища для списка контрагентов
// Параметры: ИдентификаторСписка – Строка – Уникальный идентификатор списка контрагентов;
//            НаименованиеСписка – Строка – Наименование для отображения;
//            ТекстСписка – Строка – Список контрагентов в формате "ИНН;КПП;Наименование" (каждый с новой строки)
// Операции с БД: Создание или обновление элемента справочника
// Примечание: Список хранится в атрибуте ТекстКода в виде многострочного текста
Процедура СохранитьСписокКонтрагентовВСправочник(ИдентификаторСписка, НаименованиеСписка, ТекстСписка) Экспорт

	#region initialization
	
	ПолноеИмя = "СПИСОК_КОНТРАГЕНТОВ_" + ИдентификаторСписка;
	
	#endregion
	
	#region validation
	
	ГруппаСсылка = Справочники.хн_нфо_ПоказателиОтчета.НайтиПоНаименованию(ИмяГруппы, Истина);
	Если НЕ ЗначениеЗаполнено(ГруппаСсылка) Тогда
		ВызватьИсключение "Группа показателей не найдена: " + ИмяГруппы;
	КонецЕсли;
	
	ЭлементСсылка = Справочники.хн_нфо_ПоказателиОтчета.НайтиПоНаименованию(ПолноеИмя, Истина);
	
	#endregion
	
	#region element_creation
	
	Если НЕ ЗначениеЗаполнено(ЭлементСсылка) Тогда
		ЭлементОбъект = Справочники.хн_нфо_ПоказателиОтчета.СоздатьЭлемент();
	Иначе
		ЭлементОбъект = ЭлементСсылка.ПолучитьОбъект();
	КонецЕсли;
	
	#endregion
	
	#region data_processing
	
	ЭлементОбъект.Наименование = ПолноеИмя;
	ЭлементОбъект.Родитель = ГруппаСсылка;
	ЭлементОбъект.Идентификатор = ИдентификаторСписка;
	ЭлементОбъект.ВидПоказателя = Перечисления.хн_нфо_ВидыПоказателейОтчета.ВычислениеНаВстроенномЯзыке;
	ЭлементОбъект.ОписаниеПоказателя = НаименованиеСписка;
	ЭлементОбъект.НеВыводитьВОтчет = Истина;
	ЭлементОбъект.ПометкаУдаления = Ложь;
	
	// Сохраняем список контрагентов в атрибут ТекстКода
	// Формат: каждая строка - "ИНН;КПП;Наименование"
	ЭлементОбъект.ТекстКода = ТекстСписка;
	
	#endregion
	
	#region database_write
	
	ЭлементОбъект.Записать();
	
	#endregion

КонецПроцедуры

// Назначение: Получение списка контрагентов из справочника
// Параметры: ИдентификаторСписка – Строка – Уникальный идентификатор списка контрагентов
// Возвращаемое: Массив – Массив ссылок на контрагентов
// Примечание: Читает список из атрибута ТекстКода и ищет контрагентов по ИНН+КПП
Функция ПолучитьСписокКонтрагентовИзСправочника(ИдентификаторСписка) Экспорт

	#region initialization
	
	МассивКонтрагентов = Новый Массив;
	ПолноеИмя = "СПИСОК_КОНТРАГЕНТОВ_" + ИдентификаторСписка;
	
	#endregion
	
	#region database_query
	
	ЭлементСсылка = Справочники.хн_нфо_ПоказателиОтчета.НайтиПоНаименованию(ПолноеИмя, Истина);
	
	Если НЕ ЗначениеЗаполнено(ЭлементСсылка) Тогда
		Возврат МассивКонтрагентов;
	КонецЕсли;
	
	#endregion
	
	#region data_processing
	
	// Читаем текст списка из атрибута ТекстКода
	ТекстСписка = ЭлементСсылка.ТекстКода;
	
	Если ПустаяСтрока(ТекстСписка) Тогда
		Возврат МассивКонтрагентов;
	КонецЕсли;
	
	// Разбиваем текст на строки
	МассивСтрок = СтрРазделить(ТекстСписка, Символы.ПС, Ложь);
	
	Для Каждого СтрокаСписка Из МассивСтрок Цикл
		
		// Парсим строку вида "ИНН;КПП;Наименование"
		МассивЧастей = СтрРазделить(СтрокаСписка, ";", Ложь);
		
		Если МассивЧастей.Количество() >= 2 Тогда
			
			ИНН = СокрЛП(МассивЧастей[0]);
			КПП = СокрЛП(МассивЧастей[1]);
			
			// Ищем контрагента по ИНН+КПП
			Если НЕ ПустаяСтрока(ИНН) Тогда
				
				КонтрагентСсылка = НайтиКонтрагентаПоИННиКПП(ИНН, КПП);
				
				Если ЗначениеЗаполнено(КонтрагентСсылка) Тогда
					МассивКонтрагентов.Добавить(КонтрагентСсылка);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	#endregion
	
	#region result_formation
	
	Возврат МассивКонтрагентов;
	
	#endregion

КонецФункции

// Назначение: Поиск контрагента по ИНН и КПП
// Параметры: ИНН – Строка – ИНН контрагента; КПП – Строка – КПП контрагента
// Возвращаемое: СправочникСсылка.Контрагенты – Найденный контрагент или ПустаяСсылка
Функция НайтиКонтрагентаПоИННиКПП(ИНН, КПП = "")

	#region initialization
	
	КонтрагентСсылка = Справочники.Контрагенты.ПустаяСсылка();
	
	#endregion
	
	#region database_query
	
	Запрос = Новый Запрос;
	
	Если ПустаяСтрока(КПП) Тогда
		// Поиск только по ИНН (для ИП и физлиц)
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И НЕ Контрагенты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
	Иначе
		// Поиск по ИНН и КПП (для организаций)
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|	И Контрагенты.КПП = &КПП
		|	И НЕ Контрагенты.ПометкаУдаления";
		
		Запрос.УстановитьПараметр("ИНН", ИНН);
		Запрос.УстановитьПараметр("КПП", КПП);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	#endregion
	
	#region data_processing
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Если Выборка.Следующий() Тогда
			КонтрагентСсылка = Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	#endregion
	
	#region result_formation
	
	Возврат КонтрагентСсылка;
	
	#endregion

КонецФункции

// Назначение: Инициализация всех списков контрагентов в справочнике
// Примечание: ИНН и КПП указаны как пример, необходимо заменить на реальные значения
// Формат хранения: в атрибуте ТекстКода каждая строка - "ИНН;КПП;Наименование"
Процедура ИнициализироватьСпискиКонтрагентовВСправочнике() Экспорт

	#region initialization
	
	#endregion
	
	#region data_processing
	
	// Строка 1 - ИТ-услуги
	// ВАЖНО: Замените ИНН и КПП на реальные значения из вашей базы!
	ТекстСписка =
	"7704000000;770401001;АБИСОФТ ООО
	|7705000000;770501001;АБИУС ООО
	|7706000000;770601001;АЙТИ ЛАЙТ ООО
	|7707000000;770701001;АКРИБИЯ. ПРОЕКТЫ И СЕРВИС ООО
	|7708000000;770801001;ВИНВЕСТОР АО
	|7713076301;771301001;ВЫМПЕЛКОМ ПАО
	|7710000000;771001001;МАКОМНЕТ АО
	|7711000000;771101001;МАСТЕРТЕЛ АО
	|7712000000;771201001;МБ ЗАЩИТА ИНФОРМАЦИИ ООО
	|7812014560;997950001;МЕГАФОН ПАО
	|7702077840;770401001;ПАО МОСКОВСКАЯ БИРЖА
	|7715000000;771501001;РНД СОФТ ООО
	|7707049388;770701001;РОСТЕЛЕКОМ ПАО
	|7717000000;771701001;СИНТЕГС ООО
	|7718000000;771801001;СКРИН МАРКЕТ СИСТЕМЗ ООО
	|7719000000;771901001;ТУРБО ТЕХНОЛОГИИ ООО";
	СохранитьСписокКонтрагентовВСправочник("Стр1_ИТУслуги", "Контрагенты по ИТ-услугам", ТекстСписка);
	
	// Строка 2 - Аренда помещений
	ТекстСписка =
	"7720000000;772001001;АПОЛЛО КОНСТРАКШН ООО
	|7721000000;772101001;ВАЛОВАЯ 37 ООО
	|7722000000;772201001;УК ЛЕРТА КАПИТАЛ ООО";
	СохранитьСписокКонтрагентовВСправочник("Стр2_АрендаПомещений", "Контрагенты по аренде помещений", ТекстСписка);
	
	// Строка 3 - Депозитарии
	ТекстСписка =
	"7729114098;772901001;НКО АО НРД
	|7744000600;774401001;РАЙФФАЙЗЕНБАНК АО
	|7710140679;771301001;ТБАНК АО";
	СохранитьСписокКонтрагентовВСправочник("Стр3_Депозитарии", "Контрагенты-депозитарии", ТекстСписка);
	
	// Строка 20 - Банк ГПБ
	ТекстСписка =
	"7744001497;772801001;Банк ГПБ (АО)";
	СохранитьСписокКонтрагентовВСправочник("Стр20_БанкГПБ", "Контрагент Банк ГПБ", ТекстСписка);
	
	#endregion

КонецПроцедуры

// ФУНКЦИИ ПОЛУЧЕНИЯ КОНТРАГЕНТОВ - используют справочник Показателей

// Назначение: Получение массива контрагентов для строки 1 из справочника
// Возвращаемое: Массив – Массив ссылок на контрагентов
Функция ПолучитьКонтрагентов_Стр1_ИТУслуги() Экспорт
	
	Возврат ПолучитьСписокКонтрагентовИзСправочника("Стр1_ИТУслуги");

КонецФункции

// Назначение: Получение массива контрагентов для строки 2 из справочника
// Возвращаемое: Массив – Массив ссылок на контрагентов
Функция ПолучитьКонтрагентов_Стр2_АрендаПомещений() Экспорт
	
	Возврат ПолучитьСписокКонтрагентовИзСправочника("Стр2_АрендаПомещений");

КонецФункции

// Назначение: Получение массива контрагентов для строки 3 из справочника
// Возвращаемое: Массив – Массив ссылок на контрагентов
Функция ПолучитьКонтрагентов_Стр3_Депозитарии() Экспорт
	
	Возврат ПолучитьСписокКонтрагентовИзСправочника("Стр3_Депозитарии");

КонецФункции

// Назначение: Получение массива контрагентов для строки 20 из справочника
// Возвращаемое: Массив – Массив ссылок на контрагентов
Функция ПолучитьКонтрагентов_Стр20_БанкГПБ() Экспорт
	
	Возврат ПолучитьСписокКонтрагентовИзСправочника("Стр20_БанкГПБ");

КонецФункции

#КонецОбласти

// ПРИМЕР ИСПОЛЬЗОВАНИЯ:
//
// 1. Инициализация списков (первый запуск):
//    ИнициализироватьСпискиКонтрагентовВСправочнике();
//
// 2. Получение списка контрагентов:
//    МассивКонтрагентов = ПолучитьКонтрагентов_Стр1_ИТУслуги();
//
// 3. Редактирование списка:
//    - Откройте справочник хн_нфо_ПоказателиОтчета
//    - Найдите элемент СПИСОК_КОНТРАГЕНТОВ_Стр1_ИТУслуги
//    - Отредактируйте атрибут ТекстКода
//    - Формат: "ИНН;КПП;Наименование" (каждая строка - один контрагент)
//
// ПРЕИМУЩЕСТВА:
// ✅ Простота - нет создания вспомогательных элементов-маркеров
// ✅ Надежность - поиск контрагентов по уникальному ИНН+КПП
// ✅ Редактируемость - легко изменить список прямо в справочнике
// ✅ Прозрачность - весь список виден в одном атрибуте