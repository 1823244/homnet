// Назначение: Модуль формы внешней обработки "График работ"
// Параметры: Нет
// Примечания: Содержит обработчики команд и событий формы

#Область ОбработчикиСобытийФормы

// Назначение: Обработчик события "При создании на сервере"
// Параметры: Отказ – Булево – отказ от создания формы; СтандартнаяОбработка – Булево – выполнять стандартную обработку
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// initialization
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

// Назначение: Сформировать отчет на основе макета
// Параметры: Нет
// Примечания: Создает табличный документ и выводит его в форме
&НаСервере
Процедура СформироватьОтчет()
	
	// operation_start
	Сообщить("<operation_start>Начало формирования отчета График работ</operation_start>");
	
	Попытка
		
		// template_processing
		ЭтотОбъект.ТабличныйДокумент = РеквизитФормыВЗначение("Объект").СоздатьТабличныйДокумент(Истина);
		
		// result_formation
		Сообщить("<operation_end>Отчет успешно сформирован</operation_end>");
		
	Исключение
		
		// error_handling
		ТекстОшибки = ОписаниеОшибки();
		Сообщить("<error_details>Ошибка формирования отчета: " + ТекстОшибки + "</error_details>");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Не удалось сформировать отчет. " + ТекстОшибки);
		
	КонецПопытки;
	
КонецПроцедуры

// Назначение: Очистить табличный документ
// Параметры: Нет
&НаСервере
Процедура ОчиститьОтчет()
	
	// cleanup
	ТабличныйДокумент.Очистить();
	Сообщить("<cleanup>Табличный документ очищен</cleanup>");
	
КонецПроцедуры

// Назначение: Показать информацию о программе
// Параметры: Нет
&НаСервере
Процедура ОИнформации()
	
	// information_display
	ИнформацияОбъекта = РеквизитФормыВЗначение("Объект").ПолучитьИнформацию();
	
	ТекстСообщения = СтрШаблон("
		|%1
		|Версия: %2
		|Автор: %3
		|Дата создания: %4
		|
		|%5",
		ИнформацияОбъекта.Наименование,
		ИнформацияОбъекта.Версия,
		ИнформацияОбъекта.Автор,
		Формат(ИнформацияОбъекта.ДатаСоздания, "ДФ=dd.MM.yyyy"),
		ИнформацияОбъекта.Описание);
	
	ПоказатьПредупреждение(, ТекстСообщения, , "Информация о программе");
	
КонецПроцедуры

// Назначение: Экспортировать данные в Excel
// Параметры: Нет
&НаКлиенте
Процедура ЭкспортироватьВExcel()
	
	// file_selection
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Сохранить график работ";
	Диалог.ПолноеИмяФайла = "График_работ_" + Формат(ТекущаяДатаСеанса(), "ДФ=yyyyMMdd_HHmmss") + ".xlsx";
	Диалог.Фильтр = "Файлы Excel (*.xlsx)|*.xlsx";
	
	Если Диалог.Выбрать() Тогда
		ЭкспортироватьВExcelНаСервере(Диалог.ПолноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

// Назначение: Экспортировать данные в Excel на сервере
// Параметры: ПутьКФайлу – Строка – путь для сохранения файла
&НаСервере
Процедура ЭкспортироватьВExcelНаСервере(Знач ПутьКФайлу)
	
	// export_operation
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Результат = ОбъектОбработки.ЭкспортироватьВExcel(ПутьКФайлу, Истина);
	
	Если Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Данные успешно экспортированы в файл: " + ПутьКФайлу);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			"Ошибка экспорта данных в Excel");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Назначение: Установить условное оформление элементов формы
// Параметры: Нет
// Примечания: Настраивает внешний вид элементов формы
Процедура УстановитьУсловноеОформление()
	
	// appearance_setup
	Элементы.ТабличныйДокумент.АвтоМасштаб = Истина;
	Элементы.ТабличныйДокумент.ОтображатьСетку = Истина;
	Элементы.ТабличныйДокумент.ОтображатьЗаголовки = Истина;
	Элементы.ТабличныйДокумент.ЗащищатьДокумент = Ложь;
	Элементы.ТабличныйДокумент.ТолькоПросмотр = Ложь;
	
КонецПроцедуры

#КонецОбласти
