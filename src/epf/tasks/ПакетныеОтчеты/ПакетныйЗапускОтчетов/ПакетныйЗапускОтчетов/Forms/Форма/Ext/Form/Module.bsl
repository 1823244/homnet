
&НаКлиенте
Процедура СформироватьОтчеты(Команда)
		
	ОткрытьОтчетПрограммноИВыгрузить("КарточкаСчета");
	ОткрытьОтчетПрограммноИВыгрузить("АнализСчета");
	ОткрытьОтчетПрограммноИВыгрузить("ОборотноСальдоваяВедомостьПоСчету");
	
КонецПроцедуры

// Описание_метода
//
// Параметры:
//	ИмяОтчета  - строка - например "КарточкаСчета"
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция ПолучитьПутьВыгрузки(ИмяОтчета)
	
	ИмяФайла = ИмяОтчета+"_"+Строка(Счет)+"_"+Формат(Период.ДатаНачала,"ДФ=ддММгггг")+"_"+Формат(Период.ДатаОкончания,"ДФ=ддММгггг");
	ИмяФайла = СтрЗаменить(ИмяФайла, ".", "_");
	ИмяФайла = ИмяФайла + ".xlsx";
	
	ПутьККаталогуВыгрузки = ПутьККаталогу;
	Если СтрЗаканчиваетсяНа(ПутьККаталогуВыгрузки, "\") = Ложь Тогда
		ПутьККаталогуВыгрузки = ПутьККаталогуВыгрузки + "\";
	КонецЕсли;
	
	Возврат ПутьККаталогуВыгрузки + ИмяФайла;
	
КонецФункции

&НаКлиенте
// Описание_метода
//
// Параметры:
//	ИмяОтчета  - строка - например "КарточкаСчета"
//
Процедура ОткрытьОтчетПрограммноИВыгрузить(Знач ИмяОтчета)

	//Заполняем реквизиты отчета и обязательные поля (могут отличаться в зависимости от отчета) 
	ПользовательскиеНастройкиКомпоновкиДанных = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.
		Вставить("Счет"          , Счет);
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.
		Вставить("НачалоПериода" , Период.ДатаНачала);
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.
		Вставить("КонецПериода"  , Период.ДатаОкончания);
	ПользовательскиеНастройкиКомпоновкиДанных.ДополнительныеСвойства.
		Вставить("Организация"   , Организация);
	
	//Заполняем дополнительные отборы (в примере только для субконто1 и субконто2)
	НовыйОтбор                                        = ПользовательскиеНастройкиКомпоновкиДанных.Элементы.Добавить(Тип("ОтборКомпоновкиДанных"));
	НовыйОтбор.ИдентификаторПользовательскойНастройки = "Отбор";
	//ЕНС 2024-10-25 отключил
	//ЗаполнитьЭлементОтбораКомпоновкиДанных(НовыйОтбор,Истина,ВидСравненияКомпоновкиДанных.Равно,"Субконто1", Контрагент);
	//ЗаполнитьЭлементОтбораКомпоновкиДанных(НовыйОтбор,Истина,ВидСравненияКомпоновкиДанных.Равно,"Субконто2", Договор);
	
	//Обязателньо указываем ключ (Равным параметру "ИДРасшифровки",я указывал Имя отчета ) НастройкиРасшифровки
	НастройкиРасшифровки = Новый Структура;
	НастройкиРасшифровки.Вставить(ИмяОтчета, ПользовательскиеНастройкиКомпоновкиДанных);
	
	УсловияОтбора = Новый Структура();
	УсловияОтбора.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	
	//Дублируем настройки (у меня в файловой без этого не открывалось)
	ОбщиеНастройки = Новый Структура();
	ОбщиеНастройки.Вставить("Объект"              , УсловияОтбора);
	ОбщиеНастройки.Вставить("НастройкиРасшифровки", НастройкиРасшифровки);
	
	//Помещаем во временное хранилище (Уид можно случайный)
	АдресХранилища = ПоместитьВоВременноеХранилище(ОбщиеНастройки,
		Новый УникальныйИдентификатор);

	//Обращаем внимания на заполнемые настройки, если вы укажете отбор = истина то затрется все выше указанные отборы ( поскольку показатели и группировки я не менял, то оставил их типоыми) 
	ЗаполнятьТиповыеНастройки = Новый Структура;
	ЗаполнятьТиповыеНастройки.Вставить("Отбор"          , Ложь);
	ЗаполнятьТиповыеНастройки.Вставить("Группирова"     , Истина);
	ЗаполнятьТиповыеНастройки.Вставить("ВыводимыеДанные", Истина);
	ЗаполнятьТиповыеНастройки.Вставить("Показатели"     , Истина);
	
	//Сами параметры для предачи на форму ("ИДРасшифровки" - в данном случаи ключ от структуры НастройкиРасшифровки , если "СформироватьПриОткрытии" будет равно Ложь то отчет откроется с ранее сохраненными настройками)     
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ВидРасшифровки"         , 1);
	ПараметрыОтчета.Вставить("АдресНастроек"          , АдресХранилища);
	ПараметрыОтчета.Вставить("СформироватьПриОткрытии", Истина);
	ПараметрыОтчета.Вставить("ИДРасшифровки"          , ИмяОтчета);
	ПараметрыОтчета.Вставить("РежимРасшифровки"       , Истина);
	ПараметрыОтчета.Вставить("ЗаполняемыеНастройки"   , ЗаполнятьТиповыеНастройки);
	
	ПараметрыОтчета.Вставить("РежимВыгрузки", Истина);
	ПараметрыОтчета.Вставить("ЗаголовокКнопкиВыгрузки", "Выгрузить ЕНС");
	
	ПараметрыОтчета.Вставить("ВыполнитьВыгрузку", Истина);
	
	ПараметрыОтчета.Вставить("ПутьККаталогуВыгрузки", ПутьККаталогу);
	ПараметрыОтчета.Вставить("ПутьКФайлуВыгрузки", ПолучитьПутьВыгрузки(ИмяОтчета));

	//Ну и открываем саму форму
	ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма.ФормаОтчета", ПараметрыОтчета);
	
	//конец

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЭлементОтбораКомпоновкиДанных(ОтборНастройкиКомпоновкиДанных,Использование,ВидСрав,ИмяПоля,ЗначениеОтбора)
    
    НовыйЭлемент = ОтборНастройкиКомпоновкиДанных.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    
    НовыйЭлемент.Использование  = Использование;
    НовыйЭлемент.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяПоля);
    НовыйЭлемент.ВидСравнения   = ВидСрав;
    НовыйЭлемент.ПравоеЗначение = ЗначениеОтбора;
    
КонецПроцедуры

&НаКлиенте
Процедура ПутьККаталогуНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	д = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	КолБэкВыбораКаталога = Новый ОписаниеОповещения("КолБэкВыбораКаталога", ЭтотОбъект);
	Д.Показать(КолБэкВыбораКаталога);
КонецПроцедуры

&НаКлиенте
Процедура КолБэкВыбораКаталога(Рез, ДопПарам) Экспорт
	Если Рез = Неопределено Тогда
		ПутьККаталогу = "";
	КонецЕсли;
	ПутьККаталогу = Рез[0];
КонецПроцедуры

